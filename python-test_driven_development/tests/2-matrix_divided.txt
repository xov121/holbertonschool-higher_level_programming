>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[]], 3)
[[]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]
>>> matrix_divided([[1.5, 2.8, 3.3], [4.2, 5.5, 6.6]], 2)
[[0.75, 1.4, 1.65], [2.1, 2.75, 3.3]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "hey")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided((1, 3), 7)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided([[1, "hi", 3], [4, 5, 6]], 6)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
